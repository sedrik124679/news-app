{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../API/http\";\nimport { addNewsToState, addSingleNewsCommentsToState, addSingleNewsToState, setLoading } from \"../reducers/newsReducer\";\nexport const addToNews = async (title, description, urlIMG) => {\n  try {\n    const response = await axios.post(`${API_URL}/news/add`, {\n      title,\n      description,\n      urlIMG\n    });\n    alert(response.data.message);\n  } catch (e) {\n    console.log(e);\n    alert(e.response.data.message);\n  }\n};\nexport const getNewsFromState = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${API_URL}/news/getnews`);\n      dispatch(addNewsToState(response.data));\n      dispatch(setLoading());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const getSingleNewsFromState = newsId => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${API_URL}/news/getsinglenews/${newsId}`);\n      dispatch(addSingleNewsToState(response.data));\n      dispatch(setLoading());\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const addCommentToNews = async (newsId, comment) => {\n  try {\n    const response = await axios.post(`${API_URL}/news/addcomment/${newsId}`, {\n      comment\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getCommentFromSingleNews = newsId => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`${API_URL}/news/getcomments/${newsId}`);\n      dispatch(addSingleNewsCommentsToState(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};","map":{"version":3,"sources":["F:/MongoExpressReactNode/news-app/client/src/actions/newsAction.js"],"names":["axios","API_URL","addNewsToState","addSingleNewsCommentsToState","addSingleNewsToState","setLoading","addToNews","title","description","urlIMG","response","post","alert","data","message","e","console","log","getNewsFromState","dispatch","get","getSingleNewsFromState","newsId","addCommentToNews","comment","headers","Authorization","localStorage","getItem","getCommentFromSingleNews"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,4BAAxB,EAAsDC,oBAAtD,EAA4EC,UAA5E,QAA6F,yBAA7F;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcC,WAAd,EAA2BC,MAA3B,KAAsC;AAC3D,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAY,GAAEV,OAAQ,WAAtB,EAAkC;AACrDM,MAAAA,KADqD;AAC9CC,MAAAA,WAD8C;AACjCC,MAAAA;AADiC,KAAlC,CAAvB;AAGAG,IAAAA,KAAK,CAACF,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAL;AACH,GALD,CAKE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAH,IAAAA,KAAK,CAACG,CAAC,CAACL,QAAF,CAAWG,IAAX,CAAgBC,OAAjB,CAAL;AACH;AACJ,CAVM;AAYP,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,eAArB,CAAvB;AACAkB,MAAAA,QAAQ,CAACjB,cAAc,CAACQ,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAM,MAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;AACH,KAJD,CAIE,OAAOU,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMM,sBAAsB,GAAIC,MAAD,IAAY;AAC9C,SAAO,MAAMH,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,uBAAsBqB,MAAO,EAAlD,CAAvB;AACAH,MAAAA,QAAQ,CAACf,oBAAoB,CAACM,QAAQ,CAACG,IAAV,CAArB,CAAR;AACAM,MAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;AACH,KAJD,CAIE,OAAOU,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMQ,gBAAgB,GAAG,OAAOD,MAAP,EAAeE,OAAf,KAA2B;AACvD,MAAI;AACA,UAAMd,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAY,GAAEV,OAAQ,oBAAmBqB,MAAO,EAAhD,EAAmD;AAACE,MAAAA;AAAD,KAAnD,EAA8D;AACjFC,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAAvD;AADyE,KAA9D,CAAvB;AAGH,GAJD,CAIE,OAAOb,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMc,wBAAwB,GAAIP,MAAD,IAAY;AAChD,SAAO,MAAMH,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,qBAAoBqB,MAAO,EAAhD,CAAvB;AACAH,MAAAA,QAAQ,CAAChB,4BAA4B,CAACO,QAAQ,CAACG,IAAV,CAA7B,CAAR;AACH,KAHD,CAGE,OAAOE,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAPD;AAQH,CATM","sourcesContent":["import axios from \"axios\";\r\nimport {API_URL} from \"../API/http\";\r\nimport {addNewsToState, addSingleNewsCommentsToState, addSingleNewsToState, setLoading} from \"../reducers/newsReducer\";\r\n\r\nexport const addToNews = async (title, description, urlIMG) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/news/add`, {\r\n            title, description, urlIMG\r\n        })\r\n        alert(response.data.message)\r\n    } catch (e) {\r\n        console.log(e)\r\n        alert(e.response.data.message)\r\n    }\r\n}\r\n\r\nexport const getNewsFromState = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/news/getnews`)\r\n            dispatch(addNewsToState(response.data))\r\n            dispatch(setLoading())\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getSingleNewsFromState = (newsId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/news/getsinglenews/${newsId}`)\r\n            dispatch(addSingleNewsToState(response.data))\r\n            dispatch(setLoading())\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCommentToNews = async (newsId, comment) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/news/addcomment/${newsId}`, {comment}, {\r\n            headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}\r\n        })\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getCommentFromSingleNews = (newsId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/news/getcomments/${newsId}`)\r\n            dispatch(addSingleNewsCommentsToState(response.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}